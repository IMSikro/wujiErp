// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wujiErp.Model;

#nullable disable

namespace wujiErp.ModelMigragions.Migrations
{
    [DbContext(typeof(NpgsqlDbContext))]
    partial class NpgsqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wujiErp.Model.DataModel.Store.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Addr")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastOrderTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Love")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WechatCode")
                        .HasColumnType("text");

                    b.Property<string>("WhereFrom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Addr = "江苏省苏州市姑苏区东汇路187号 2-103",
                            CreatedTime = new DateTime(2023, 6, 21, 2, 25, 51, 697, DateTimeKind.Utc).AddTicks(5966),
                            IsDeleted = false,
                            LastOrderTime = new DateTime(2023, 6, 21, 2, 25, 51, 697, DateTimeKind.Utc).AddTicks(5972),
                            Love = "水果",
                            Name = "张文静",
                            Phone = "13952401683",
                            WechatCode = "violame",
                            WhereFrom = "微信"
                        });
                });

            modelBuilder.Entity("wujiErp.Model.DataModel.Store.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AftersalePrice")
                        .HasColumnType("double precision");

                    b.Property<double>("CostPrice")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAftersale")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("Num")
                        .HasColumnType("double precision");

                    b.Property<string>("OrderCode")
                        .HasColumnType("text");

                    b.Property<string>("OrderFrom")
                        .HasColumnType("text");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<string>("OtherAddr")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("ProduceId")
                        .HasColumnType("integer");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProduceId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AftersalePrice = 0.0,
                            CostPrice = 15.0,
                            CreatedTime = new DateTime(2023, 6, 21, 2, 25, 51, 704, DateTimeKind.Utc).AddTicks(7505),
                            CustomerId = 1,
                            IsAftersale = false,
                            IsDeleted = false,
                            Num = 1.0,
                            OrderCode = "SF15645648951516554",
                            OrderFrom = "微信",
                            OrderStatus = 1,
                            OtherAddr = "",
                            Price = 50.0,
                            ProduceId = 1,
                            Remark = "好评",
                            TotalPrice = 50.0
                        });
                });

            modelBuilder.Entity("wujiErp.Model.DataModel.Store.Models.Produce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("CostPrice")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Delivery")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("LastPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Norm")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Produce");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPrice = 15.0,
                            CreatedTime = new DateTime(2023, 6, 21, 2, 25, 51, 705, DateTimeKind.Utc).AddTicks(222),
                            Delivery = "德邦物流",
                            IsDeleted = false,
                            LastPrice = 50.0,
                            Name = "昭通丑苹果",
                            Norm = "5斤大果",
                            Price = 50.0,
                            Remark = "又甜又脆很好吃",
                            Source = "云南昭通"
                        });
                });

            modelBuilder.Entity("wujiErp.Model.DataModel.Store.Models.Order", b =>
                {
                    b.HasOne("wujiErp.Model.DataModel.Store.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wujiErp.Model.DataModel.Store.Models.Produce", "Produce")
                        .WithMany()
                        .HasForeignKey("ProduceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Produce");
                });
#pragma warning restore 612, 618
        }
    }
}
